plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'java'
	id 'war'
}

group = 'com.top'
version = '0.0.1-study'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def versions = [
		HikariCP 		: '3.4.1',
		hibernateCore 	: '5.4.3.Final',
		querydslJpa 	: '4.2.1',
		querydslApt 	: '4.2.1',
		querydslPlugin 	: '1.0.9',
		swagger 		: '2.6.1',
		swaggerUi		: '2.6.1'		
]


dependencies {
	implementation group : 'org.springframework.boot', name : 'spring-boot-starter-data-jpa'
	implementation group : 'org.springframework.boot', name : 'spring-boot-starter-web'
	implementation group : 'org.springframework.boot', name : 'spring-boot-configuration-processor'
	
	implementation group : 'io.springfox', name : 'springfox-swagger2',		version : versions.swagger
	implementation group : 'io.springfox', name : 'springfox-swagger-ui',	version : versions.swaggerUi
	
	implementation group : 'org.hibernate',	name : 'hibernate-core', version : versions.hibernateCore
	implementation group : 'com.querydsl', name : 'querydsl-jpa', version : versions.querydslJpa
	implementation group : 'com.querydsl', name : 'querydsl-apt', version : versions.querydslApt
	
	implementation group : 'org.apache.commons', name : 'commons-dbcp2'
	
	implementation group : 'com.zaxxer', name :'HikariCP',	version : versions.HikariCP
	
	implementation group : 'org.slf4j',	name : 'slf4j-api'
	implementation group : 'ch.qos.logback', name : 'logback-classic'
	
	
	compileOnly group : 'org.projectlombok', name : 'lombok' 
	runtimeOnly group : 'org.postgresql', name : 'postgresql'
	annotationProcessor group : 'org.projectlombok', name : 'lombok'
	providedRuntime group : 'org.springframework.boot', name : 'spring-boot-starter-tomcat'
	testImplementation group : 'org.springframework.boot', name : 'spring-boot-starter-test'
}

def queryDslOutput = file("src-gen/main/java")

sourceSets {
    main {
        java {
            srcDir "src-gen/main/java"
        }
    }
}

clean {
    delete queryDslOutput
}

task generateQueryDSL(type: JavaCompile, group: "build") {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
    options.failOnError = false
}

compileJava {
    dependsOn generateQueryDSL 
    source generateQueryDSL.destinationDir
}
